<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <!--DisableDataGridCellByIndexRow>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-->
    <Style TargetType="DataGrid" x:Key="StyleDataGridNoHeader">
        <Setter Property="CanUserResizeColumns" Value="False" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="CanUserReorderColumns" Value="False" />
        <Setter Property="CanUserSortColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="IsReadOnly" Value="False" />
        <Setter Property="RowHeaderWidth" Value="0" />
        <Setter Property="ColumnHeaderHeight" Value="1" />
    </Style>

    <Style TargetType="DataGridColumnHeader" x:Key="StyleDataGridColumnTwoHeader">
        <Setter Property="Background" Value="#dcdcdc" />
        <Setter Property="BorderBrush" Value="{DynamicResource ColorBorder}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Height" Value="45" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="DataGridColumnHeader" x:Key="StyleDataGridColumnOneHeader">
        <Setter Property="Background" Value="#dcdcdc" />
        <Setter Property="BorderBrush" Value="{DynamicResource ColorBorder}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Height" Value="25" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="DataGridCell" x:Key="DataGridCellNoneSelectedWhenDisableRowIndex">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0.0" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=AlternationIndex}" Value="0" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="IsEnabled" Value="False" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="True" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource ColorBackGroundDataGridSelected}" />
                    <Setter Property="Foreground" Value="Black" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="Black" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>


    <!--DisableDataGridCellByCondition>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-->
    <Style TargetType="DataGridRow">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ColorBorder}" />
        <Setter Property="BorderThickness" Value="0.0" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource ColorBackGroundDataGridHover}" />
                    <Setter Property="Foreground" Value="Black" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource ColorBackGroundDataGridSelected}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsCondition, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="IsEnabled" Value="False" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridCell" x:Key="DataGridCellNoneSelectedWhenDisable">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0.0" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsEnabled}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="IsEnabled" Value="False" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="True" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource ColorBackGroundDataGridSelected}" />
                    <Setter Property="Foreground" Value="Black" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="Black" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="TextBlock" x:Key="TextBlockInDataGrid">
        <Setter Property="Height" Value="{DynamicResource Height}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="3  2 3 0" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Background" Value="{DynamicResource BackGroundWindow}" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <!-- <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(TextBlock.IsEnabled)}" Value="True" /> -->
                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource ColorBackGroundDataGridHover}" />
                    <Setter Property="Cursor" Value="Arrow" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <!-- <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(TextBlock.IsEnabled)}" Value="True" /> -->
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource ColorBackGroundDataGridSelected}" />
                    <Setter Property="Cursor" Value="Arrow" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- <MultiDataTrigger> -->
            <!--     <MultiDataTrigger.Conditions> -->
            <!--         <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(TextBlock.IsEnabled)}" Value="False" /> -->
            <!--         <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True" /> -->
            <!--     </MultiDataTrigger.Conditions> -->
            <!--     <MultiDataTrigger.Setters> -->
            <!--         <Setter Property="Background" Value="{DynamicResource ColorBackGroundWindow}" /> -->
            <!--         <Setter Property="Cursor" Value="Arrow" /> -->
            <!--     </MultiDataTrigger.Setters> -->
            <!-- </MultiDataTrigger> -->
            <!-- -->
            <!-- <MultiDataTrigger> -->
            <!--     <MultiDataTrigger.Conditions> -->
            <!--         <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(TextBlock.IsEnabled)}" Value="False" /> -->
            <!--         <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True" /> -->
            <!--     </MultiDataTrigger.Conditions> -->
            <!--     <MultiDataTrigger.Setters> -->
            <!--         <Setter Property="Background" Value="{DynamicResource ColorBackGroundWindow}" /> -->
            <!--         <Setter Property="Cursor" Value="Arrow" /> -->
            <!--     </MultiDataTrigger.Setters> -->
            <!-- </MultiDataTrigger> -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ColorTextDisable}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="StackPanel" x:Key="StackPanelInDataGrid">
        <Setter Property="Background" Value="{DynamicResource BackGroundWindow}" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <!-- <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(TextBlock.IsEnabled)}" Value="True" /> -->
                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource ColorBackGroundDataGridHover}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <!-- <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(TextBlock.IsEnabled)}" Value="True" /> -->
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource ColorBackGroundDataGridSelected}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- <MultiDataTrigger> -->
            <!--     <MultiDataTrigger.Conditions> -->
            <!--         <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(TextBlock.IsEnabled)}" Value="False" /> -->
            <!--         <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True" /> -->
            <!--     </MultiDataTrigger.Conditions> -->
            <!--     <MultiDataTrigger.Setters> -->
            <!--         <Setter Property="Background" Value="{DynamicResource ColorBackGroundWindow}" /> -->
            <!--         <Setter Property="Cursor" Value="Arrow" /> -->
            <!--     </MultiDataTrigger.Setters> -->
            <!-- </MultiDataTrigger> -->
            <!-- -->
            <!-- <MultiDataTrigger> -->
            <!--     <MultiDataTrigger.Conditions> -->
            <!--         <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(TextBlock.IsEnabled)}" Value="False" /> -->
            <!--         <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True" /> -->
            <!--     </MultiDataTrigger.Conditions> -->
            <!--     <MultiDataTrigger.Setters> -->
            <!--         <Setter Property="Background" Value="{DynamicResource ColorBackGroundWindow}" /> -->
            <!--         <Setter Property="Cursor" Value="Arrow" /> -->
            <!--     </MultiDataTrigger.Setters> -->
            <!-- </MultiDataTrigger> -->

        </Style.Triggers>
    </Style>
    <!--TextBoxInDataGridNoneColorWhenDisable>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-->
    <Style TargetType="TextBox" x:Key="TextBoxInDataGrid">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="SelectionBrush" Value="#0078D7" />
        <Setter Property="SelectionTextBrush" Value="DimGray" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value=" 4 0 4 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <!-- <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(TextBox.IsEnabled)}" Value="True" /> -->
                                <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="{DynamicResource ColorBackGroundDataGridHover}" />
                                <Setter Property="Cursor" Value="Arrow" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <!-- <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(TextBox.IsEnabled)}" Value="True" /> -->
                                <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="{DynamicResource ColorBackGroundDataGridSelected}" />
                                <Setter Property="Cursor" Value="Arrow" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                        <!-- <MultiDataTrigger> -->
                        <!--     <MultiDataTrigger.Conditions> -->
                        <!--         <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(TextBox.IsEnabled)}" Value="False" /> -->
                        <!--         <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True" /> -->
                        <!--     </MultiDataTrigger.Conditions> -->
                        <!--     <MultiDataTrigger.Setters> -->
                        <!--         <Setter Property="Background" Value="White" /> -->
                        <!--         <Setter Property="Cursor" Value="Arrow" /> -->
                        <!--     </MultiDataTrigger.Setters> -->
                        <!-- </MultiDataTrigger> -->
                        <!-- -->
                        <!-- <MultiDataTrigger> -->
                        <!--     <MultiDataTrigger.Conditions> -->
                        <!--         <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(TextBox.IsEnabled)}" Value="False" /> -->
                        <!--         <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True" /> -->
                        <!--     </MultiDataTrigger.Conditions> -->
                        <!--     <MultiDataTrigger.Setters> -->
                        <!--         <Setter Property="Background" Value="White" /> -->
                        <!--         <Setter Property="Cursor" Value="Arrow" /> -->
                        <!--     </MultiDataTrigger.Setters> -->
                        <!-- </MultiDataTrigger> -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ColorTextDisable}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBoxNoneFocus" TargetType="TextBox">
        <Setter Property="SelectionBrush" Value="Transparent" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Height" Value="{DynamicResource Height}" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{DynamicResource ColorBorder}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ColorBorder}" />
                            <Setter Property="Cursor" Value="Arrow" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ColorBorder}" />
                            <Setter Property="Cursor" Value="Arrow" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ColorTextDisable}" />
                            <Setter Property="Cursor" Value="Arrow" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBoxInDataGrid>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-->
    <ControlTemplate x:Key="ComboBoxToggleButtonDataGrid" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border"
                    Grid.ColumnSpan="2"
                    CornerRadius="0"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="true" />
            <Border Grid.Column="1">
                <Path x:Name="Arrow"
                      Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                      Fill="DimGray"
                      Stretch="Fill"
                      Height="5"
                      Width="7"
                      Margin="0 0 7 0"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Center" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#f0f0f0" />
                <Setter Property="Foreground" Value="{DynamicResource ColorTextDisable}" />
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ColorTextDisable}" />
            </Trigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=DataGridRow}}"
                               Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(ToggleButton.IsEnabled)}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Foreground" Value="#888888" />
                    <Setter Property="Background" Value="{DynamicResource ColorBackGroundDataGridHover}" TargetName="Border" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource AncestorType=DataGridRow}}"
                               Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(ToggleButton.IsEnabled)}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Foreground" Value="#888888" />
                    <Setter Property="Background" Value="{DynamicResource ColorBackGroundDataGridSelected}" TargetName="Border" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBoxDataGrid" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="ComboBoxStyleCustomDataGrid" TargetType="{x:Type ComboBox}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="IsTextSearchEnabled" Value="True" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="toggleButton"
                                      Template="{StaticResource ComboBoxToggleButtonDataGrid}"
                                      Focusable="True"
                                      BorderBrush="Transparent"
                                      BorderThickness="0"
                                      Background="{TemplateBinding Background}"
                                      ClickMode="Release"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ContentPresenter x:Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="5 0 25 0"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"
                                          IsEnabled="True" />
                        <TextBox x:Name="PART_EditableTextBox"
                                 Template="{StaticResource ComboBoxTextBoxDataGrid}"
                                 TextAlignment="Left"
                                 AllowDrop="True"
                                 OverridesDefaultStyle="True"
                                 ScrollViewer.PanningMode="VerticalFirst"
                                 Stylus.IsFlicksEnabled="False"
                                 MinWidth="0"
                                 MinHeight="0"
                                 FocusVisualStyle="{x:Null}"
                                 HorizontalAlignment="Stretch"
                                 Margin="2 1 23 0"
                                 VerticalContentAlignment="Center"
                                 HorizontalContentAlignment="Left"
                                 Focusable="True"
                                 Background="White"
                                 Foreground="Black"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup x:Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               StaysOpen="False"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        BorderThickness="1"
                                        Background="White"
                                        BorderBrush="DimGray" />
                                <ScrollViewer Margin="1 4 1 4"
                                              x:Name="ScrollViewer"
                                              SnapsToDevicePixels="True"
                                              OverridesDefaultStyle="True"
                                              FontStretch="Normal"
                                              FontSize="11">
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                            <Setter TargetName="DropDownBorder" Property="BorderBrush" Value="{DynamicResource ColorBorder}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ColorTextDisable}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="IsEditable" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <!-- <Setter Property="Background" Value="#f0f0f0" TargetName="PART_EditableTextBox"/> -->
                                <Setter Property="Foreground" Value="{DynamicResource ColorTextDisable}" TargetName="PART_EditableTextBox" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsEditable" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Foreground" Value="Black" TargetName="PART_EditableTextBox" />
                                <Setter TargetName="toggleButton" Property="Background" Value="#ffffff" />
                                <Setter TargetName="PART_EditableTextBox" Property="Background" Value="#ffffff" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsEditable" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Foreground" Value="Black" TargetName="PART_EditableTextBox" />
                                <Setter TargetName="toggleButton" Property="Background" Value="#ededed" />
                                <Setter TargetName="PART_EditableTextBox" Property="Background" Value="#ededed" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0 2 0 0" />
                            <Setter TargetName="DropDownBorder" Property="BorderBrush" Value="DimGray" />
                            <Setter TargetName="DropDownBorder" Property="BorderThickness" Value="1" />
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=DataGridRow}}"
                                           Value="True" />
                                <!-- <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(ComboBox.IsEnabled)}" Value="True" /> -->
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="{DynamicResource ColorBackGroundDataGridHover}" TargetName="PART_EditableTextBox" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource AncestorType=DataGridRow}}"
                                           Value="True" />
                                <!-- <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(ComboBox.IsEnabled)}" Value="True" /> -->
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="{DynamicResource ColorBackGroundDataGridSelected}" TargetName="PART_EditableTextBox" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                            <!-- <Setter TargetName="toggleButton" Property="Background" Value="White"></Setter> -->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="StyleComboboxItemCustom" TargetType="ComboBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="White" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="White" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ColorBackGroundDataGridSelected}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="White" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ColorBackGroundDataGridSelected}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="White" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Style Button Image binding change image>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> -->
    <Style TargetType="Button" x:Key="ButtonChangeImage">
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Height" Value="{DynamicResource Height}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="BorderBrush" Value="#3C7FB1" />
                    <Setter Property="Background" Value="#BEE6FD" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="Background" Value="Transparent" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonImageEnable" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Height" Value="{DynamicResource Height}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path= IsEnabled}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="Background" Value="Transparent" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path= IsMouseOver}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="{DynamicResource ColorBorder}" />
                    <Setter Property="Background" Value="#BEE6FD" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <!--GroupBox>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-->
    <Style TargetType="GroupBox" x:Key="StyleGroupBoxNoConner">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="18" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Margin="0 0 0 0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5px" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <!-- Header -->
                            <Border Grid.Row="1" Grid.Column="0" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource ColorBorder}" SnapsToDevicePixels="True" CornerRadius="0,0,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                            <Label Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
                                <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" />
                            </Label>
                            <Border Grid.Row="1" Grid.Column="2" BorderThickness="0,1,1,0" SnapsToDevicePixels="True" BorderBrush="{DynamicResource ColorBorder}" CornerRadius="0,0,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                        </Grid>

                        <!-- Content -->
                        <Border Grid.Row="1" BorderBrush="{DynamicResource ColorBorder}" SnapsToDevicePixels="True" BorderThickness="1,0,1,1" CornerRadius="0,0,0,0" Margin="0,0,0,0">
                            <ContentPresenter Margin="0" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Control>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-->
    <Color x:Key="Border">#ACACAC</Color>
    <SolidColorBrush x:Key="ColorBorder" Color="{StaticResource Border}" />
    <SolidColorBrush x:Key="ColorTextDisable" Color="#8d8d8d" />
    <SolidColorBrush x:Key="ColorBackGroundDataGridHover" Color="#E5F3FF" />
    <SolidColorBrush x:Key="ColorBackGroundDataGridSelected" Color="#CCE8FF" />
    <SolidColorBrush x:Key="BackGroundWindow" Color="#f0f0f0" />

    <system:Double x:Key="FontSize">12</system:Double>
    <system:Double x:Key="Height">20</system:Double>

</ResourceDictionary>