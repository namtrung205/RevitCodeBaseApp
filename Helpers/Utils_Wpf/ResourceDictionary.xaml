<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <Style TargetType="TextBox">
        <Setter Property="Padding" Value="3 0 3 0" />
        <Setter Property="Height" Value="{DynamicResource Height}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="BorderBrush" Value="{DynamicResource ColorBorder}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ColorTextBlockDisable}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="Button">
        <Style.Setters>
            <Setter Property="Height" Value="{DynamicResource Height}" />
            <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Width" Value="80" />
            <Setter Property="Padding" Value="0 0 0 2" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="BorderBrush" Value="{DynamicResource ColorBorder}" />
        </Style.Setters>
    </Style>

    <Style TargetType="Label">
        <Setter Property="Height" Value="{DynamicResource Height}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Padding" Value="0 0 0 0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ColorTextBlockDisable}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Image">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="RepeatButton">
        <Style.Setters>
            <Setter Property="Height" Value="{DynamicResource Height}" />
            <Setter Property="Width" Value="60" />
            <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Delay" Value="500" />
            <Setter Property="Interval" Value="500" />
            <Setter Property="BorderBrush" Value="{DynamicResource ColorBorder}" />
            <Setter Property="Padding" Value="-3.5" />
        </Style.Setters>
    </Style>

    <Style TargetType="{x:Type RibbonToolTip}">
        <Setter Property="TextBlock.TextAlignment" Value="Left" />
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="Height" Value="{DynamicResource Height}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Padding" Value="3  2 3 0" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ColorTextBlockDisable}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ColorTextBlockDisable}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="RadioButton">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--DataGrid>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-->
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="#dcdcdc" />
        <Setter Property="BorderBrush" Value="{DynamicResource ColorBorder}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Height" Value="40" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="DataGridCell">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0.0" />
        <Setter Property="Background" Value="{DynamicResource BackGroundWindow}" />
        <Style.Triggers>
            <Trigger Property="DataGridCell.IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource ColorBackGroundDataGridSelected}" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger Property="DataGridCell.IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ColorBackGroundDataGridHover}" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource ColorBackGroundDataGridHover}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource ColorBackGroundDataGridSelected}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <!-- <MultiDataTrigger> -->
            <!--     <MultiDataTrigger.Conditions> -->
            <!--         <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" /> -->
            <!--         <Condition Binding="{Binding IsMapping, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="False" /> -->
            <!--     </MultiDataTrigger.Conditions> -->
            <!--     <MultiDataTrigger.Setters> -->
            <!--         <Setter Property="Background" Value="#CCE8FF" /> -->
            <!--         <Setter Property="Foreground" Value="#838383" /> -->
            <!--     </MultiDataTrigger.Setters> -->
            <!-- </MultiDataTrigger> -->
            <!-- <MultiDataTrigger> -->
            <!--     <MultiDataTrigger.Conditions> -->
            <!--         <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" /> -->
            <!--         <Condition Binding="{Binding IsMapping, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True" /> -->
            <!--     </MultiDataTrigger.Conditions> -->
            <!--     <MultiDataTrigger.Setters> -->
            <!--         <Setter Property="Background" Value="#CCE8FF" /> -->
            <!--         <Setter Property="Foreground" Value="Black" /> -->
            <!--     </MultiDataTrigger.Setters> -->
            <!-- </MultiDataTrigger> -->
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridCell" x:Key="DataGridCellNoneSelectedWhenDisableRowIndex">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0.0" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=AlternationIndex}" Value="0" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="IsEnabled" Value="False" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="True" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#CCE8FF" />
                    <Setter Property="Foreground" Value="Black" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="Black" />
                </MultiTrigger.Setters>
            </MultiTrigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridRow">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ColorBorder}" />
        <Setter Property="BorderThickness" Value="0.0" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="#E5F3FF" />
                    <Setter Property="Foreground" Value="Black" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="#CCE8FF" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMapping, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Foreground" Value="#838383" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="Background" Value="White" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ColorBorder}" />
        <Setter Property="CanUserResizeColumns" Value="False" />
        <Setter Property="CanUserSortColumns" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="EnableColumnVirtualization" Value="True" />
        <Setter Property="EnableRowVirtualization" Value="True" />
        <Setter Property="RowHeaderWidth" Value="0" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="RowHeight" Value="{DynamicResource Height}" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="HorizontalGridLinesBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,0" MappingMode="Absolute"
                                     SpreadMethod="Repeat">
                    <GradientStop Offset="0.5" Color="{DynamicResource Border}" />
                    <GradientStop Offset="0.5" Color="{DynamicResource Border}" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalGridLinesBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,0" MappingMode="Absolute"
                                     SpreadMethod="Repeat">
                    <GradientStop Offset="0.5" Color="{DynamicResource Border}" />
                    <GradientStop Offset="0.5" Color="{DynamicResource Border}" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TabControl" x:Key="StyleTabControl">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ColorBorder}" />
        <Setter Property="Background" Value="White" />
        <Style.Resources>
            <Style TargetType="TabItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{DynamicResource ColorBorder}" CornerRadius="0,0,0,0">
                                <ContentPresenter x:Name="ContentSite"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  ContentSource="Header"
                                                  Margin=" -2 0 0 0" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Margin" Value="0 0 0 -1" />
                                    <Setter TargetName="Border" Property="Background" Value="White" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="ContentSite" Property="Margin" Value="-2 0 0 0" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="GroupBox">
        <Setter Property="BorderBrush" Value="{DynamicResource ColorBorder}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
    </Style>

    <Style TargetType="Border">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderBrush" Value="{DynamicResource ColorBorder}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Height" Value="{DynamicResource Height}" />
        <Setter Property="IsTextSearchEnabled" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ColorTextBlockDisable}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <LinearGradientBrush x:Key="HorizontalBorderBrushDottedLine" StartPoint="0,0" EndPoint="2,0" MappingMode="Absolute"
                         SpreadMethod="Repeat">
        <GradientStop Offset="0" Color="{DynamicResource Border}" />
        <GradientStop Offset="0.5" Color="{DynamicResource Border}" />
        <GradientStop Offset="0.5" Color="Transparent" />
        <GradientStop Offset="1" Color="Transparent" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VerticalBorderBrushDottedLine" StartPoint="0,0" EndPoint="0,2" MappingMode="Absolute"
                         SpreadMethod="Repeat">
        <GradientStop Offset="0" Color="{DynamicResource Border}" />
        <GradientStop Offset="0.5" Color="{DynamicResource Border}" />
        <GradientStop Offset="0.5" Color="Transparent" />
        <GradientStop Offset="1" Color="Transparent" />
    </LinearGradientBrush>

    <!--Control>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-->
    <Color x:Key="Border">#ACACAC</Color>
    <SolidColorBrush x:Key="ColorBorder" Color="{StaticResource Border}" />
    <SolidColorBrush x:Key="ColorTextBlockDisable" Color="#8d8d8d" />
    <SolidColorBrush x:Key="BackGroundWindow" Color="#f0f0f0" />
    <SolidColorBrush x:Key="ColorBackGroundDataGridHover" Color="#E5F3FF" />
    <SolidColorBrush x:Key="ColorBackGroundDataGridSelected" Color="#CCE8FF" />
    
    <system:Double x:Key="FontSize">11</system:Double>
    <system:Double x:Key="Height">21</system:Double>
</ResourceDictionary>